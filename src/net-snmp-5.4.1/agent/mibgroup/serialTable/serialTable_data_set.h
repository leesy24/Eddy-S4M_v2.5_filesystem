/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 12077 $ of $ 
 *
 * $Id:$
 */
#ifndef SERIALTABLE_DATA_SET_H
#define SERIALTABLE_DATA_SET_H

#ifdef __cplusplus
extern "C" {
#endif

/* *********************************************************************
 * SET function declarations
 */

/* *********************************************************************
 * SET Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table serialTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * SYSBAS-MIB::serialTable is subid 3 of sysbas.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.1.3, length: 8
*/


int serialTable_undo_setup( serialTable_rowreq_ctx *rowreq_ctx);
int serialTable_undo_cleanup( serialTable_rowreq_ctx *rowreq_ctx);
int serialTable_undo( serialTable_rowreq_ctx *rowreq_ctx);
int serialTable_commit( serialTable_rowreq_ctx *rowreq_ctx);
int serialTable_undo_commit( serialTable_rowreq_ctx *rowreq_ctx);


int portName_check_value( serialTable_rowreq_ctx *rowreq_ctx, char *portName_val_ptr,  size_t portName_val_ptr_len);
int portName_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int portName_set( serialTable_rowreq_ctx *rowreq_ctx, char *portName_val_ptr,  size_t portName_val_ptr_len );
int portName_undo( serialTable_rowreq_ctx *rowreq_ctx );

int socketNumber_check_value( serialTable_rowreq_ctx *rowreq_ctx, long socketNumber_val);
int socketNumber_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int socketNumber_set( serialTable_rowreq_ctx *rowreq_ctx, long socketNumber_val );
int socketNumber_undo( serialTable_rowreq_ctx *rowreq_ctx );

int protocol_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long protocol_val);
int protocol_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int protocol_set( serialTable_rowreq_ctx *rowreq_ctx, u_long protocol_val );
int protocol_undo( serialTable_rowreq_ctx *rowreq_ctx );

int deviceType_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long deviceType_val);
int deviceType_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int deviceType_set( serialTable_rowreq_ctx *rowreq_ctx, u_long deviceType_val );
int deviceType_undo( serialTable_rowreq_ctx *rowreq_ctx );

int remoteIPAddress_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long remoteIPAddress_val);
int remoteIPAddress_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int remoteIPAddress_set( serialTable_rowreq_ctx *rowreq_ctx, u_long remoteIPAddress_val );
int remoteIPAddress_undo( serialTable_rowreq_ctx *rowreq_ctx );

int remoteSocketNumber_check_value( serialTable_rowreq_ctx *rowreq_ctx, long remoteSocketNumber_val);
int remoteSocketNumber_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int remoteSocketNumber_set( serialTable_rowreq_ctx *rowreq_ctx, long remoteSocketNumber_val );
int remoteSocketNumber_undo( serialTable_rowreq_ctx *rowreq_ctx );

int bypassEnable_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long bypassEnable_val);
int bypassEnable_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int bypassEnable_set( serialTable_rowreq_ctx *rowreq_ctx, u_long bypassEnable_val );
int bypassEnable_undo( serialTable_rowreq_ctx *rowreq_ctx );

int loginEnable_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long loginEnable_val);
int loginEnable_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int loginEnable_set( serialTable_rowreq_ctx *rowreq_ctx, u_long loginEnable_val );
int loginEnable_undo( serialTable_rowreq_ctx *rowreq_ctx );

int loginUsername_check_value( serialTable_rowreq_ctx *rowreq_ctx, char *loginUsername_val_ptr,  size_t loginUsername_val_ptr_len);
int loginUsername_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int loginUsername_set( serialTable_rowreq_ctx *rowreq_ctx, char *loginUsername_val_ptr,  size_t loginUsername_val_ptr_len );
int loginUsername_undo( serialTable_rowreq_ctx *rowreq_ctx );

int loginPassword_check_value( serialTable_rowreq_ctx *rowreq_ctx, char *loginPassword_val_ptr,  size_t loginPassword_val_ptr_len);
int loginPassword_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int loginPassword_set( serialTable_rowreq_ctx *rowreq_ctx, char *loginPassword_val_ptr,  size_t loginPassword_val_ptr_len );
int loginPassword_undo( serialTable_rowreq_ctx *rowreq_ctx );

int connectionCount_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long connectionCount_val);
int connectionCount_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int connectionCount_set( serialTable_rowreq_ctx *rowreq_ctx, u_long connectionCount_val );
int connectionCount_undo( serialTable_rowreq_ctx *rowreq_ctx );

int connectionStatus_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long connectionStatus_val);
int connectionStatus_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int connectionStatus_set( serialTable_rowreq_ctx *rowreq_ctx, u_long connectionStatus_val );
int connectionStatus_undo( serialTable_rowreq_ctx *rowreq_ctx );

int serialRowStatus_check_value( serialTable_rowreq_ctx *rowreq_ctx, u_long serialRowStatus_val);
int serialRowStatus_undo_setup( serialTable_rowreq_ctx *rowreq_ctx );
int serialRowStatus_set( serialTable_rowreq_ctx *rowreq_ctx, u_long serialRowStatus_val );
int serialRowStatus_undo( serialTable_rowreq_ctx *rowreq_ctx );


int serialTable_check_dependencies(serialTable_rowreq_ctx *ctx);


#ifdef __cplusplus
}
#endif

#endif /* SERIALTABLE_DATA_SET_H */
