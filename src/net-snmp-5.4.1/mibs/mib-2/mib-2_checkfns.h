/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.iterate.conf,v 5.6 2003/02/20 00:52:07 hardaker Exp $
 */

/***********************************************************************
 *   This file is auto-generated and SHOULD NOT BE EDITED by hand.
 *   Modify the mib-2_checkfns_local.[ch] files insead.
 *   (so that you can regenerate this one as mib2c improvements are made)
 ***********************************************************************/
#ifndef MIB-2_CHECKFNS_H
#define MIB-2_CHECKFNS_H

/** make sure we load the functions that you can modify */
config_require(mib-2_checkfns_local)

/* these functions are designed to check incoming values for 
columns in the sysORTable table for legality with respect to 
datatype and value.
 */

/* these functions are designed to check incoming values for 
columns in the ifTable table for legality with respect to 
datatype and value.
 */

      int check_ifAdminStatus(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the atTable table for legality with respect to 
datatype and value.
 */

      int check_atIfIndex(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_atPhysAddress(int type, char *val, size_t val_len, char *old_val, size_t old_val_len);
      int check_atNetAddress(int type,  *val, size_t val_len,  *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the ipAddrTable table for legality with respect to 
datatype and value.
 */

/* these functions are designed to check incoming values for 
columns in the ipRouteTable table for legality with respect to 
datatype and value.
 */

      int check_ipRouteDest(int type, u_long *val, size_t val_len, u_long *old_val, size_t old_val_len);
      int check_ipRouteIfIndex(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteMetric1(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteMetric2(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteMetric3(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteMetric4(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteNextHop(int type, u_long *val, size_t val_len, u_long *old_val, size_t old_val_len);
      int check_ipRouteType(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteAge(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipRouteMask(int type, u_long *val, size_t val_len, u_long *old_val, size_t old_val_len);
      int check_ipRouteMetric5(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the ipNetToMediaTable table for legality with respect to 
datatype and value.
 */

      int check_ipNetToMediaIfIndex(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ipNetToMediaPhysAddress(int type, char *val, size_t val_len, char *old_val, size_t old_val_len);
      int check_ipNetToMediaNetAddress(int type, u_long *val, size_t val_len, u_long *old_val, size_t old_val_len);
      int check_ipNetToMediaType(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the tcpConnTable table for legality with respect to 
datatype and value.
 */

      int check_tcpConnState(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the udpTable table for legality with respect to 
datatype and value.
 */

/* these functions are designed to check incoming values for 
columns in the egpNeighTable table for legality with respect to 
datatype and value.
 */

      int check_egpNeighEventTrigger(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the rs232PortTable table for legality with respect to 
datatype and value.
 */

      int check_rs232PortInSpeed(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232PortOutSpeed(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232PortInFlowType(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232PortOutFlowType(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the rs232AsyncPortTable table for legality with respect to 
datatype and value.
 */

      int check_rs232AsyncPortBits(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232AsyncPortStopBits(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232AsyncPortParity(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232AsyncPortAutobaud(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the rs232SyncPortTable table for legality with respect to 
datatype and value.
 */

      int check_rs232SyncPortClockSource(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortRole(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortEncoding(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortRTSControl(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortRTSCTSDelay(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortMode(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortIdlePattern(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_rs232SyncPortMinFlags(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the rs232InSigTable table for legality with respect to 
datatype and value.
 */

/* these functions are designed to check incoming values for 
columns in the rs232OutSigTable table for legality with respect to 
datatype and value.
 */

/* these functions are designed to check incoming values for 
columns in the ifXTable table for legality with respect to 
datatype and value.
 */

      int check_ifLinkUpDownTrapEnable(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ifPromiscuousMode(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ifAlias(int type, char *val, size_t val_len, char *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the ifStackTable table for legality with respect to 
datatype and value.
 */

      int check_ifStackStatus(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the ifTestTable table for legality with respect to 
datatype and value.
 */

      int check_ifTestId(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ifTestStatus(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ifTestType(int type, oid *val, size_t val_len, oid *old_val, size_t old_val_len);
      int check_ifTestOwner(int type, char *val, size_t val_len, char *old_val, size_t old_val_len);
/* these functions are designed to check incoming values for 
columns in the ifRcvAddressTable table for legality with respect to 
datatype and value.
 */

      int check_ifRcvAddressStatus(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);
      int check_ifRcvAddressType(int type, long *val, size_t val_len, long *old_val, size_t old_val_len);

#endif /* MIB-2_CHECKFNS_H */

